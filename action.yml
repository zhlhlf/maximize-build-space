name: 'Maximize build disk space'
description: 'Maximize the available disk space for your build job'
branding:
  icon: 'crop'
  color: 'orange'
inputs:
  swap-size-mb:
    description: 'Swap space to create, in Megabytes.'
    required: false
    default: '4096'
  remove-dotnet:
    description: 'Removes .NET runtime and libraries. (frees ~17 GB)'
    required: false
    default: 'false'
  remove-android:
    description: 'Removes Android SDKs and Tools. (frees ~11 GB)'
    required: false
    default: 'false'
  remove-haskell:
    description: 'Removes GHC (Haskell) artifacts. (frees ~2.7 GB)'
    required: false
    default: 'false'
  remove-codeql:
    description: 'Removes CodeQL Action Bundles. (frees ~5.4 GB)'
    required: false
    default: 'false'
  remove-docker-images:
    description: 'Removes cached Docker images. (frees ~3 GB)'
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: Disk space report before modification
      shell: bash
      run: |
        echo "Memory and swap:"
        sudo swapon --show
        echo
        echo "Available storage:"
        sudo df -h
        echo "当前工作目录可用空间大小"
        sudo df -h ./

    - name: Maximize build disk space
      shell: bash
      run: |
          echo "Arguments:"
          echo
          echo "  Swap space:        ${{ inputs.swap-size-mb }} MiB"
          echo -n "  Removing:     "
          if [[ ${{ inputs.remove-dotnet }} == 'true' ]]; then
            echo -n "dotnet "
          fi
          if [[ ${{ inputs.remove-android }} == 'true' ]]; then
            echo -n "android "
          fi
          if [[ ${{ inputs.remove-haskell }} == 'true' ]]; then
            echo -n "haskell "
          fi
          if [[ ${{ inputs.remove-codeql }} == 'true' ]]; then
            echo -n "codeql "
          fi
          if [[ ${{ inputs.remove-docker-images }} == 'true' ]]; then
            echo -n "docker "
          fi
          echo

          echo "Removing unwanted software... "
          if [[ ${{ inputs.remove-dotnet }} == 'true' ]]; then
            sudo rm -rf /usr/share/dotnet
          fi
          if [[ ${{ inputs.remove-android }} == 'true' ]]; then
            sudo rm -rf /usr/local/lib/android
          fi
          if [[ ${{ inputs.remove-haskell }} == 'true' ]]; then
            sudo rm -rf /opt/ghc
          fi
          if [[ ${{ inputs.remove-codeql }} == 'true' ]]; then
            sudo rm -rf /opt/hostedtoolcache/CodeQL
          fi
          if [[ ${{ inputs.remove-docker-images }} == 'true' ]]; then
            sudo docker image prune --all --force
          fi
          echo "... done"

          swapfile_NAME=/home/zhlhlf-swapfile

          echo "Unmounting and removing swap file."
          sudo swapoff -a
          sudo rm -rf /mnt/*

          echo "Recreating swap"
          # create and activate swap
          sudo touch $swapfile_NAME
          sudo fallocate -l "${{ inputs.swap-size-mb }}M" $swapfile_NAME
          sudo mkswap $swapfile_NAME
          sudo swapon $swapfile_NAME

          echo "link /mnt -> $(pwd)"
          pwd=`pwd`
          dir=`dirname $pwd`
          sudo rm -rf $dir
          sudo ln -sf /mnt $dir
          sudo chmod 777 /mnt $dir
          mkdir -p $pwd

    - name: Disk space report after modification
      shell: bash
      run: |
        echo "Memory and swap:"
        sudo swapon --show
        echo
        echo "Available storage:"
        sudo df -h
        echo "当前工作目录可用空间大小"
        sudo df -h ./
